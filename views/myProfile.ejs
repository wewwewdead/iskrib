<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Iskryb</title>
    <link rel="stylesheet" href="/styles/myProfile.css">
</head>
<body>

    <nav class="navbar">
        <button class="navbutton">☰</button>
        <div class="logo">
            <h2><a href="/landingpage">Iskryb</a></h2>
        </div>

        <div class="logOutIcon">
            <form class="log-out" action="/logOut" method="post">
                <input class="logout-button" type="submit" value="Log out">
            </form>
        </div>
        
        <div class="nav-icons">
            <form action="/logOut" method="post">
                <input class="logout-button" type="submit" value="Log out">
            </form>
        </div>
    </nav>

    <div class="container">

        <div class="sidebar-desktop">
            <div class="sidebar-icons">
                <h4><a href="/myProfile"><%= locals.user.firstname%> <%= locals.user.lastname %></a></h4>
                <p></p><a href="/landingpage">Home</a></p>
            </div>
        </div>
        
        <div class="sidebar">
            <div class="sidebar-icons">
                <div class="logoInSidebar"> 
                    <h2><a href="/landingpage">Iskryb</a></h2>
                </div>
            </div>
        </div>

        <div class="profile-container">
           <div class="profile-details">
            <h2><%= locals.user.firstname %> <%= locals.user.lastname %></h2>
            <p> <%= locals.user.email %></p>
            <br>
            <div class="selection">
                <a href="/myProfile" class="profileSelection" style="text-decoration: underline;"><p>Home</p></a>
                <a href="/myProfile/Bio"class="profileSelection"><p>Bio</p></a>
            </div>
            <hr>
            <br>
            <h5>Posts</h5>
            <% if(posts.length > 0) {%>
                <% posts.forEach(post => {%>
            <div class="profile_post" id="profile_post" data-id="<%= post.id %>">  

                    <div class="post-title">
                        <h2><%= post.title %></h2>
                        <div class="post-settings"><p class="settings">⋯</p>
                            
                            <div class="hide">
                                <div class="edit-box">
                                    <a class="edit-post menu" href="#" data-title="<%= post.title %>" data-content="<%= post.content %>" data-id="<%= post.id %>">Update post</a>
                                </div>
                                <div class="edit-box">
                                    <a class="delete-post menu" href="#" data-id="<%= post.id %>">Delete post</a>
                                </div>
                            </div>    
                        </div>
                    </div>

                    <p class="post-content"><%= post.content.length > 200 ? post.content.substring(0, 200) : post.content %>
                        <% if (post.content.length > 200) {%>
                            <a href="#" class="read-more" data-id="<%= post.id %>">... Read more</a>
                        <% } %></p>

                    <p><small><%= new Date(post.created_at).toLocaleString() %></small></p>
            </div>
            <%}); %>
                <% } else {%>
                    <p>No post yet</p>
                <%}%>
                

            <div class="pagination">
                <% if(currentPage > 1) {%>
                    <a href="/myProfile?page=<%= currentPage - 1 %>"> &laquo; Previous</a>
                    <% }%> 
                    <span> Page <%= currentPage %> of <%= totalPages %> </span> 
                <% if(currentPage < totalPages ) {%>
                    <a href="/myProfile?page=<%= currentPage + 1 %>"> Next &raquo;</a>
                    <% } %>
            </div>
            
            <!-- Confirmation Dialog for Deleting Post -->
             <div id="deleteDialog" class="dialog hidden">
                <div class="dialog-content">
                    <h3>Are you sure you want to delete this post?</h3>
                    <div class="dialog-buttons">
                        <button type="button" id="confirmDelete">Yes, delete</button>
                        <button type="button" id="cancelDelete">Cancel</button>
                    </div>
                </div>
            </div>

            <!-- Dialog Form -->
             <div id="editDialog" class="dialog hidden">
                <div class="dialog-content">
                    <h3>Edit Post</h3>
                    <form id="editPostForm" method="POST" action="">
                        <input type="hidden" name="_method" value="PUT">
                        <label for="editTitle">Title:</label>
                        <input type="text" id="editTitle" name="title" required>
            
                        <label for="editContent">Content:</label>
                        <textarea id="editContent" name="content" required></textarea>
            
                        <div class="dialog-buttons">
                            <button type="submit">Save</button>
                            <button type="button" id="cancelEdit">Cancel</button>
                        </div>
                    </form>
                </div>
            </div>

        </div>

        <div class="edit-profile">
            <div><a href="/edit-profile" >Edit Profile</a></div> 
        </div>
        
        
    </div>
   

</body>
<script>
    
    document.addEventListener('DOMContentLoaded', () => {
        const deleteDialog = document.getElementById('deleteDialog');
        const confirmDelete = document.getElementById('confirmDelete');
        const cancelDelete = document.getElementById('cancelDelete');
        const deletePostButton = document.querySelectorAll('.delete-post');
        let postIdToDelete = null; // Declare the variable to store the post ID to delete

        // Open delete confirmation dialog
        deletePostButton.forEach(button => {
            console.log("Delete button found:", button); 
            button.addEventListener('click', (e) => {
                e.preventDefault(); // Prevent default link action
                postIdToDelete = button.getAttribute('data-id'); // Get the post ID from data-id attribute

                // Show the delete confirmation dialog
                deleteDialog.classList.remove('hidden');
            });
        });
        // Confirm delete action
        confirmDelete.addEventListener('click', async () => {
            try {
                // Send DELETE request to server
                const response = await fetch(`/delete/posts/${postIdToDelete}`, {
                    method: 'DELETE',
                });
                
                if (response.ok) {
                    // Successfully deleted post
                    const postElement = document.querySelector(`.profile_post[data-id="${postIdToDelete}"]`);
                    
                    if (postElement) {
        
                        postElement.remove(); // Remove post from DOM
                        } else {
                            console.log('Post element not found in DOM'); // Debug: Post element
                            }
                            
                    // Hide the dialog
                    deleteDialog.classList.add('hidden');
                } else {
                    console.error('Failed to delete the post');
                    alert('An error occurred while deleting the post.');
                }
            } catch (error) {
                console.error('Error deleting the post:', error);
                alert('An error occurred while deleting the post.');
            }
        });
        
        // Close delete confirmation dialog on cancel
        cancelDelete.addEventListener('click', () => {
        deleteDialog.classList.add('hidden'); // Hide the dialog
        });
        
        // Close dialog when clicking outside the dialog content
        deleteDialog.addEventListener('click', (e) => {
            if (e.target === deleteDialog) {
                deleteDialog.classList.add('hidden');
            }
        });
    });

    document.addEventListener('DOMContentLoaded', () => {
        const profilePost = document.querySelectorAll('.profile_post');

        profilePost.forEach(post => {
            
            post.addEventListener('click', async(e)=> {
                if(e.target.classList.contains('read-more')) {
                    e.preventDefault();
                    const postId = e.target.getAttribute('data-id');
                    const postElements = e.target.parentElement;
                    

                    try {
                        //feth the post from database
                        const response = await fetch(`/api/posts/${postId}`);
                        if(response.ok) {
                            const post = await response.json();
                            // Update the content and remove the "Read More" link
                            postElements.innerHTML = post.content;    
                            postElements.style.whiteSpace = 'pre-wrap';         
                            e.target.remove();
                        }
                    } catch (error) {
                        console.error('Error fetching post content:', error);
                    }
                }}) 
            });
        })
    

    document.addEventListener('DOMContentLoaded', () => {
    const editDialog = document.getElementById('editDialog');
    const editPostForm = document.getElementById('editPostForm');
    const editTitle = document.getElementById('editTitle');
    const editContent = document.getElementById('editContent');
    const cancelEdit = document.getElementById('cancelEdit');

    // Open dialog and populate fields
    document.querySelectorAll('.edit-post').forEach(button => {
        button.addEventListener('click', (e) => {
            e.preventDefault(); // Prevent default link action

            const postId = button.dataset.id;
            const postTitle = button.dataset.title;
            const postContent = button.dataset.content;

            editTitle.value = postTitle;
            editContent.value = postContent;
            editPostForm.action = `/posts/${postId}`; // Set the form action dynamically

            editDialog.classList.remove('hidden'); // Show the dialog
        });
    });

    // Close dialog on cancel
    cancelEdit.addEventListener('click', () => {
        editDialog.classList.add('hidden'); // Hide the dialog
    });

    // Close dialog when clicking outside the dialog content
    editDialog.addEventListener('click', (e) => {
        if (e.target === editDialog) {
            editDialog.classList.add('hidden');
        }
    });
});

</script>
<script src="/newsfeed.js"></script>
</html>
            